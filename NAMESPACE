# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# IMPORTS
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
importFrom("R.methodsS3", "setMethodS3")
importFrom("R.methodsS3", "throw")
import("R.oo")

# importFrom(R.utils, cat)
import("R.utils")

importFrom("R.cache", "loadCache")
importFrom("R.cache", "saveCache")
importFrom("R.cache", "getChecksum")

importFrom("matrixStats", "rowMads")
importFrom("matrixStats", "rowSds")
importFrom("matrixStats", "indexByRow")

importFrom("aroma.light", "robustSmoothSpline")
importFrom("aroma.light", "calibrateMultiscan")
importFrom("aroma.light", "normalizeFragmentLength")
importFrom("aroma.light", "normalizeQuantileSpline")

import("aroma.apd")
## As soon as 'aroma.apd' declares all S3 methods
## (not the case in aroma.apd v0.3.0)
## importFrom("aroma.apd", "readApd")
## importFrom("aroma.apd", "writeApd")


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# EXPORTS
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Object that must exported explicitly
export(.conflicts.OK)

# Export all public methods, that is, those without a preceeding dot
# in their names.
exportPattern("^[^\\.]")


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# DECLARATIONS
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
S3method("doASCRMAv1", "default");
S3method("doASCRMAv2", "default");
S3method("doCRMAv1", "default");
S3method("doCRMAv2", "default");
S3method("doFIRMA", "default");
S3method("doGCRMA", "default");
S3method("doRMA", "default");
